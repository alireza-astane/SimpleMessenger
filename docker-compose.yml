

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # Make Kafka bind on all interfaces inside the container
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      # Advertise the host’s interface for clients outside the container. Replace localhost with your instance’s IP or hostname if necessary.
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1











# services:
#   mongodb:
#     image: mongo:5
#     container_name: messenger_mongodb
#     ports:
#       - "27017:27017"
#     volumes:
#       - mongo_data:/data/db

#   redis:
#     image: redis:7
#     container_name: messenger_redis
#     ports:
#       - "6379:6379"

#   zookeeper:
#     image: confluentinc/cp-zookeeper:7.3.0
#     container_name: zookeeper
#     environment:
#       ZOOKEEPER_CLIENT_PORT: 2181
#       ZOOKEEPER_TICK_TIME: 2000

#   kafka:
#     image: confluentinc/cp-kafka:7.3.0
#     container_name: kafka
#     depends_on:
#       - zookeeper
#     ports:
#       - "9092:9092"
#     environment:
#       KAFKA_BROKER_ID: 1
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#       KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#     healthcheck:
#       test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
#       interval: 10s
#       timeout: 5s
#       retries: 5

#   api:
#     build: .
#     container_name: messenger_api
#     depends_on:
#       kafka:
#         condition: service_healthy
#       mongodb:
#         condition: service_started
#       redis:
#         condition: service_started
#     ports:
#       - "8000:8000"
#     environment:
#       - MONGO_DETAILS=mongodb://messenger_mongodb:27017/?uuidRepresentation=standard
#       - REDIS_HOST=messenger_redis
#       - REDIS_PORT=6379

#   consumer:
#     build: .
#     container_name: messenger_consumer
#     command: python consumer.py
#     depends_on:
#       - mongodb
#       - kafka
#     environment:
#       - MONGO_DETAILS=mongodb://messenger_mongodb:27017/?uuidRepresentation=standard
#       - KAFKA_BOOTSTRAP_SERVERS=kafka:9092

# volumes:
#   mongo_data: